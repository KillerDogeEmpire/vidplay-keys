name: Update keys

on:
  schedule:
    - cron: "57 * * * *"
  workflow_dispatch:

jobs:
  update:
    name: Update keys
    permissions:
      contents: write

    runs-on: ubuntu-latest
    steps:
      - name: Clone repo
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.10.2

      - name: Setup NodeJS environment
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Get keys
        run: pnpm getkeys

      - name: Checkout keys branch
        uses: actions/checkout@v4
        with:
          ref: keys
          path: key_repo

      - name: Update key if it differs or create if missing
        run: |
          file=keys.json
          cd key_repo
          echo "Checking if $file exists in both locations..."
          if [[ -f ../$file ]]; then
            echo "Old -> $(cat $file 2>/dev/null || echo 'File not found') || New -> $(cat ../$file)"
            if [[ ! -f $file || "$(cat $file)" != "$(cat ../$file)" ]]; then
              echo "Keys differ or file missing. Updating/Creating $file..."
              cp ../$file .
            else
              echo "Keys are identical. No update needed."
            fi
          else
            echo "../$file does not exist. Cannot update keys."
          fi

      - name: Commit and push changes if there are changes
        run: |
          cd key_repo
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git add keys.json
          git commit --allow-empty -m "Update keys.json"
          git stash
          git pull --rebase
          git stash pop || true
          git add keys.json
          git commit --allow-empty -m "Update keys.json"
          git push

      - name: Clean up unnecessary files
        run: |
          rm -rf node_modules
          rm package-lock.json
        if: always() # Ensure cleanup runs even if previous steps fail
